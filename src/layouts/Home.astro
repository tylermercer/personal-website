---
import { type CollectionEntry } from "astro:content";
import Layout from "./Base.astro";
import { formatDateIso, formatPostDate, getPostDate } from "../utils/utils";

export type Props = {
	title: string;
	description: string;
	posts: CollectionEntry<"posts">[];
	categories: CollectionEntry<"categories">[];
};

const { title, posts, categories, description } = Astro.props;
---

<Layout title={title} description={description}>
	<h1 class="pattern">
		<span class="guttered">
			{title}
		</span>
	</h1>
	<p class="guttered post-description">
		{description}
	</p>
	<div class="with-sidebar guttered">
		<div class="posts">
			<h2>Latest Posts</h2>
			<ul class="post-cards-list">
				{
					posts.map((p) => (
						<li class="post-card">
							<article>
								<time
									class="dateline"
									datetime={formatDateIso(getPostDate(p))}
								>
									{formatPostDate(getPostDate(p))}
								</time>
								<h3>
									<a href={`posts/${p.slug}`}>{p.data.title}</a>
								</h3>
								<p>{p.data.description}</p>
							</article>
						</li>
					))
				}
			</ul>
			<p><a href="/posts/2">Older posts â†’</a></p>
		</div>
		<div class="sidebar">
			<h2>Collections</h2>
			<div class="collections">
				{
					categories.map((c) => (
						<div class="collection">
							<h3
								class:list={[
									"pattern",
									`pattern-${c.data.slug}`,
								]}
							>
								<a href={`/posts/${c.data.slug}/1`}>
									{c.data.title}
								</a>
							</h3>
							<p>{c.data.description}</p>
						</div>
					))
				}
			</div>
		</div>
	</div>
</Layout>
<style lang="scss">
	:root {
		--guttered-content-width: 60rem;
	}
	main {
		margin: 0 auto;
		margin-bottom: 2rem;
	}
	h2 {
		margin-bottom: 1rem;
	}
	.collection {
		margin-bottom: 1.5rem;
		& h3 {
			padding-top: 0;
			padding-bottom: 0;
			& a {
				text-decoration: none;
				display: block;
				padding: 1rem;
				font-size: 1.5em;
				color: inherit;
			}
		}
		& p {
			margin-top: 0.5rem;
		}
	}

	.with-sidebar {
		display: flex;
		flex-wrap: wrap;
		gap: 2rem;
		row-gap: 0;
		& > .sidebar {
			flex-grow: 1;
			flex-basis: 20rem;
		}
		& > :not(.sidebar) {
			flex-basis: 0;
			flex-grow: 999;
			min-inline-size: 50%;
		}
	}
</style>
