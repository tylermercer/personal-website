---
import { type CollectionEntry } from "astro:content";
import Layout from "./Base.astro";
import MungedEmail from "../components/MungedEmail.astro";
import ShareLinks from "../components/ShareLinks.astro";
import NextPrevLinks from "../components/NextPrevLinks.astro";
import PostDescription from "../components/PostDescription.astro";
import type { WithNextAndPrev } from "../utils/toWithNextAndPrev";
import countWords from "../utils/countWords";
import formatPostDate from "../utils/formatPostDate";
import getPostDate from "../utils/getPostDate";
import Comments from "../components/Comments.astro";

export type Props = {
  post: WithNextAndPrev<CollectionEntry<"posts">>;
  category?: CollectionEntry<"categories">;
};

const READING_RATE = 235;

const { post: postWithNextAndPrev, category } = Astro.props;

const { item: post, next, prev } = postWithNextAndPrev;

const postToLink = (post?: CollectionEntry<"posts">) =>
  post && { path: `/posts/${post.slug}`, label: post.data.title };
const nextLink = postToLink(next);
const previousLink = postToLink(prev);

const url = Astro.url;

const date = getPostDate(post);

const patternClass = category ? `u-pattern-${category.id}` : "";

const wordCount = countWords(post.body);
const readingTime = Math.round(wordCount / READING_RATE) || 1;
const dropCaps = post.data.dropCaps || false;

const ogImagePath = `/posts/${post.slug}`;
---

<Layout
  title={post.data.overrideMetaTitle ?? post.data.title}
  description={post.data.overrideMetaDescription ?? post.data.description}
  ogImagePath={ogImagePath}
  category={category}
>
  <h1 class:list={["u-pattern", patternClass]}>
    <span class="u-guttered">{post.data.title}</span>
  </h1>
  <div class="u-guttered">
    {
      post.data.description && (
        <PostDescription description={post.data.description} />
      )
    }
    <p class="u-slub">
      <time datetime={date.toISOString()}>{formatPostDate(date)}</time>
      {
        category && (
          <span>
            {" "}
            in <a href={`/posts/${category.id}/1`}>{category.data.title}</a>
          </span>
        )
      }
      <span> &mdash;</span>
      {wordCount} words &mdash; {readingTime} min read
    </p>
    <div class:list={{ "article-content": true, "drop-caps": dropCaps }}>
      <slot />
      <!-- <div class="reply-and-share">
        <MungedEmail label="Reply via email" subject={post.data.title} />
        <ShareLinks url={url} title={post.data.title} />
      </div> -->
      <Comments/>
    </div>
  </div>
  <NextPrevLinks previous={previousLink} next={nextLink} labelLinks />
</Layout>

<style lang="scss">
  .article-content {
    margin-bottom: 3rem;
    &.drop-caps > p:first-of-type::first-letter {
      font-family: var(--font-heading);
      color: var(--color-primary-11);
      float: left;
      font-size: 75px;
      line-height: 10px;
      padding-top: 26px;
      padding-right: 4px;
      padding-left: 4px;
      margin: 0.1em 0.1em 0.2em 0;
    }
    & > :not(:first-child) {
      margin-top: 1em;
      margin-bottom: 0;
    }
    & .reply-and-share {
      display: flex;
      flex-wrap: wrap;
      gap: 0.35rem;
      align-items: baseline;
      & .contact-email {
        padding: 0.5rem;
        background-color: var(--color-primary-bg-static);
        color: var(--color-gray-1-static);
        font-weight: bold;
        font-family: var(--font-heading);
      }
    }
  }
</style>
