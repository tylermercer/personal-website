---
import Layout from './Page.astro';
import type { CollectionEntry } from 'astro:content';
import { formatPostDate, getPostDate } from '../utils/utils';

export type Props = {
    category: CollectionEntry<'categories'>,
    paginatedPosts: CollectionEntry<'posts'>[],
    nextPageUrl: string,
    previousPageUrl: string,
    ogImagePath?: string,
}

const { category, nextPageUrl, previousPageUrl, paginatedPosts, ogImagePath: ogImagePathRaw } = Astro.props;

const ogImagePath = ogImagePathRaw ?? `/categories/${category.id}`;
---
<Layout title={category.data.title} description={category.data.description} category={category} ogImagePath={ogImagePath}>
    <ul class="post-cards-list">
        {paginatedPosts.map(post => (
            <li class="post-card">
                <article>
                    <time class="dateline" datetime={getPostDate(post).toISOString()}>
                        {formatPostDate(getPostDate(post))}
                    </time>
                    <h3>
                        <a href={`/posts/${post.slug}`}>{post.data.title }</a>
                    </h3>
                    <p>
                        {post.data.description}
                    </p>
                </article>
            </li>
        ))}
    </ul>
    {(previousPageUrl || nextPageUrl) ? (
        <nav aria-label="Navigation" class="links-next-prev">
            {previousPageUrl && <a href={previousPageUrl}>← Newer posts</a>}
            {(previousPageUrl && nextPageUrl) && <span>|</span>}
            {nextPageUrl && <a href={nextPageUrl}>Older posts →</a>}
        </nav>
    ) : (
        <div class="links-next-prev empty">
            No more posts to show
        </div>
    )}
</Layout>
