---
import { getCollection } from "astro:content";
import Layout from "../layouts/Base.astro";
import metadata from "../content/_metadata";
import PostList from "../components/PostList.astro";
import EmailForm from "../components/EmailForm.astro";
import combineDescriptionItems from "../utils/combineDescriptionItems";
import filterOutDraftsIfProduction from "../utils/filterOutDraftsIfProduction";
import firstFive from "../utils/firstFive";
import labelDrafts from "../utils/labelDrafts";
import renderInlineMarkdown from "../utils/renderInlineMarkdown";
import sortByDate from "../utils/sortByDate";
import PostCard from "../components/PostCard.astro";

const { title, descriptionItems } = metadata;

const description = combineDescriptionItems(descriptionItems);

const allPosts = await getCollection("posts");

const posts = labelDrafts(
    firstFive(filterOutDraftsIfProduction(sortByDate(allPosts))),
);

const categories = await getCollection("categories");

const featuredPost = filterOutDraftsIfProduction(sortByDate(allPosts))
    .find(p => p.data.featured)
---

<Layout title={title} description={description} ogImagePath="/home">
    <div class="u-pattern">
        <div class="l-sidebar u-guttered title-container">
            <h1 class="title" set:html={title.split(" ").join("<br>")} />
            <ul class="description-items sidebar">
                {
                    descriptionItems.map((d) => (
                        <li>
                            <>
                                <Fragment set:html={renderInlineMarkdown(d)} />
                                <br />
                            </>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>
    <div class="content l-sidebar u-guttered">
        <div class="posts">
            {featuredPost && (
                <div class="featured">
                    <h2>Featured Post</h2>
                    <PostCard post={featuredPost}/>
                </div>
            )}
            <h2>Latest Posts</h2>
            <PostList posts={posts} />
            <p><a href="/posts/2">Older posts â†’</a></p>
        </div>
        <div class="sidebar">
            <h2>Collections</h2>
            <div class="collections">
                {
                    categories.map((c) => (
                        <div class="collection">
                            <h3 class:list={["u-pattern", `u-pattern-${c.id}`]}>
                                <a href={`/posts/${c.id}/1`}>{c.data.title}</a>
                            </h3>
                            <p
                                set:html={renderInlineMarkdown(
                                    c.data.description,
                                )}
                            />
                        </div>
                    ))
                }
            </div>
        </div>
    </div>
    <!-- <hr>
	<div class="l-sidebar u-guttered email-form-container">
		<div>
			<h2>Get new posts in your inbox</h2>
			<p class="email-blurb">
				Typically 1 or 2 posts a month. Never more than one post per day.
			</p>
			<small class="email-disclaimer">No spam. Unsubscribe at any time.</small>
		</div>
		<EmailForm class="sidebar email-form"/>
	</div> -->
</Layout>
<style lang="scss">
    :root {
        --u-guttered-content-width: 60rem;
    }
    main {
        margin: 0 auto;
        margin-bottom: 2rem;
    }
    h2 {
        margin-bottom: 1rem;
    }
    .collection {
        margin-bottom: 1.5rem;
        & h3 {
            padding-top: 0;
            padding-bottom: 0;
            background-position: center;
            & a {
                text-decoration: none;
                display: block;
                padding: 1rem;
                font-size: 1.5em;
                color: inherit;
            }
        }
        & p {
            margin-top: 0.5rem;
        }
    }
    .email-form-container {
        margin-bottom: 5rem;
    }
    .email-form {
        margin-top: 1rem;
    }
    .email-blurb {
        margin-bottom: 0.2em;
    }
    .email-disclaimer {
        color: var(--color-gray-11);
    }
    .title {
        margin: 0;
        font-size: var(--font-size-2xl);
        color: var(--color-gray-5-static);
    }
    .title-container {
        padding-block: 2rem;
        row-gap: 2rem;
    }
    .description-items {
        list-style-type: square;
        margin: 0;
        padding-inline-start: 26px;
        align-self: stretch;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        font-size: var(--font-size-lg);
        color: var(--color-gray-1-static);
        gap: 0.5rem;
        & li::marker {
            color: var(--color-primary-8-static);
        }
        & :global(a) {
            color: var(--color-primary-1-static);
            text-decoration-color: var(--color-primary-6-static);
            text-decoration-thickness: 5%;
            text-underline-offset: 2px;
        }
        & :global(a:hover, a:focus) {
            text-decoration-color: white;
            text-decoration-thickness: 10%;
        }
    }
    .content {
        margin-block: 2rem;
    }
    .featured {
        margin-bottom: 2.5rem;
    }
</style>
